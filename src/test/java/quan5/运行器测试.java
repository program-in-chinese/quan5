package quan5;

import static com.github.program_in_chinese.junit4_in_chinese.断言.相等;

import org.junit.Test;

import com.中文编程.圈5.主程序.运行器;
import com.中文编程.圈5.语法树.节点;

public class 运行器测试 {
  private static final String 换行 = "\n";

  @Test
  public void 四则运算() {
    检验源码求值("01", 1);
    检验源码求值("1+1", 2);
    检验源码求值("1+2+3+4", 10);
    检验源码求值("6*2", 12);
    检验源码求值("5-2", 3);
    检验源码求值("8/2", 4);
    检验源码求值("8/5", 1);
    检验源码求值("1-2+3-4", -2);
    检验源码求值("3*2+8/4-2*4", 0);
    检验源码求值("3×2+8÷4-2×4", 0);
    检验源码求值("(1+3)×2", 8);
  }

  @Test
  public void 比较运算() {
    检验源码求值("1==1", true);
    检验源码求值("1==2", false);
    检验源码求值("1为1", true);
    检验源码求值("1为2", false);
    
    // TODO: 有词法错误(需要空白
    检验源码求值("先=1" + 换行 + "先 为2", false);
    
    // TODO: 变量名包含关键字. 有词法错误(需要空白
    检验源码求值("为先=1" + 换行 + "为先 为2", false);
  }

  @Test
  public void 赋值() {
    检验源码求值("a=01" + 换行 + "a", 1);
    检验源码求值("变量=01" + 换行 + "变量", 1);
    检验源码求值("a=3" + 换行 + "b=2" + 换行 + "a*b", 6);
    检验源码求值("a=3" + 换行 + "a=2" + 换行 + "a*a", 4);
    检验源码求值("a=100" + 换行 + "a÷2+a*a÷2", 5050);
    检验源码求值("基数=100" + 换行 + "基数×(基数+1)÷2", 5050);
    检验源码求值("利率=1" + 换行 + "年增长率=1+利率" + 换行 + "年增长率", 2);
    检验源码求值("利率=1" + 换行 + "年增长率=1+利率" + 换行 + "1000×年增长率×年增长率", 4000);
    
    // 变量名包含关键字
    检验源码求值("为先=1" + 换行 + "为先", 1);
  }

  private void 检验源码求值(String 源码, Object 值) {
    节点 语法树 = 运行器.语法分析(源码 + 换行);
    运行器 运行器实例 = new 运行器();
    相等(运行器实例.求值(语法树), 值);
  }
}
